name: Destroy, Deploy & Swap

on:
  workflow_dispatch:

# Required for authentication through GitHub OIDC
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for pull request comments

concurrency:
  group: 'destroy-deploy-swap'
  cancel-in-progress: false

jobs:
  destroy-public-nodes:
    runs-on: ubuntu-latest
    name: DestroyPublic Nodes (hayabusa)
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Destroy Staging
        with:
          owner: vechain
          repo: node-hosting
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: destroy.yml
          client_payload: '{"target_environment": "dev", "network": "hayabusa"}'
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Swap (Old -> Staging)
        with:
          owner: vechain
          repo: node-hosting
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: swap.yml
          client_payload: '{"environment": "dev", "network": "hayabusa"}'
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Destroy Old Live
        with:
          owner: vechain
          repo: node-hosting
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: destroy.yml
          client_payload: '{"target_environment": "dev", "network": "hayabusa"}'

  destroy-authority-nodes:
    runs-on: ubuntu-latest
    name: Destroy Authority Nodes (hayabusa)
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Destroy Staging
        with:
          owner: vechain
          repo: node-authority
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: destroy-environment.yml
          client_payload: '{"target_environment": "dev", "node_network": "hayabusa"}'
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Swap (Old -> Staging)
        with:
          owner: vechain
          repo: node-authority
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: swap-all-regions.yml
          client_payload: '{"target_environment": "dev", "node_network": "hayabusa"}'
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Destroy Old Live
        with:
          owner: vechain
          repo: node-authority
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: destroy-environment.yml
          client_payload: '{"target_environment": "dev", "node_network": "hayabusa"}'

  deploy-public-nodes:
    runs-on: ubuntu-latest
    needs:
      - destroy-public-nodes
      - destroy-authority-nodes
    name: Deploy Public Nodes (hayabusa)
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Deploy Staging
        with:
          owner: vechain
          repo: node-hosting
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: deploy.yml
          client_payload: '{"target_environment": "dev", "network": "hayabusa", "full_sync": true, "node_image": "${{ inputs.node_image || vars.NODE_IMAGE }}", "genesis_url": "${{ vars.GENESIS_URL }}"}'
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Swap (New -> Live)
        with:
          owner: vechain
          repo: node-hosting
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: swap.yml
          client_payload: '{"environment": "dev", "network": "hayabusa"}'

  deploy-authority-nodes:
    runs-on: ubuntu-latest
    needs:
      - destroy-public-nodes
      - destroy-authority-nodes
    name: Deploy Authority Nodes (hayabusa)
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Deploy Staging
        with:
          owner: vechain
          repo: node-authority
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: deploy-environment.yml
          client_payload: '{"target_environment": "dev", "node_network": "hayabusa", "node_genesis_url": "${{ vars.GENESIS_URL }}", "node_image": "${{ inputs.node_image || vars.NODE_IMAGE }}"}'
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Swap (New -> Live)
        with:
          owner: vechain
          repo: node-authority
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: swap-all-regions.yml
          client_payload: '{"target_environment": "dev", "node_network": "hayabusa"}'

  update-faucet-inspector:
    needs:
      - deploy-authority-nodes
      - deploy-public-nodes
    runs-on: ubuntu-latest
    name: Update Faucet & Inspector
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Staker ABI
        run: |
          ABI=$(cat builtin/gen/compiled/Staker.abi)
          ABI="${ABI//'%'/'%25'}"
          ABI="${ABI//$'\n'/'%0A'}"
          ABI="${ABI//$'\r'/'%0D'}"
          ABI="${ABI//'"'/'\"'}"
          echo "staker_abi=$ABI" >> $GITHUB_OUTPUT
          echo $ABI
        id: get-staker-abi

      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        name: Update Faucet
        with:
          owner: vechain
          repo: devnet-faucet
          github_token: ${{ secrets.GHA_REPO_ACCESS }}
          workflow_file_name: deploy.yaml
          client_payload: '{"environment": "hayabusa", "staker_abi": "${{ steps.get-staker-abi.outputs.staker_abi }}"}'

  register-validators:
    needs:
      - deploy-authority-nodes
      - deploy-public-nodes
    runs-on: ubuntu-latest
    name: Register Validators

    env:
      GOPRIVATE: github.com/vechain/draupnir/*

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: vechain/hayabusa-e2e
          ref: release/hayabusa
          token: ${{ secrets.GHA_REPO_ACCESS }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Configure Git
        run: |
          git config --global url."https://${{ secrets.GHA_REPO_ACCESS }}@github.com/".insteadOf "https://github.com/"

      - name: Register 2/3 of validators
        run: go run ./cmd/pos
        env:
            NETWORK_URL: ${{ vars.NETWORK_URL }}
            FORK_BLOCK: ${{ vars.FORK_BLOCK }}
            VALIDATOR_PRIVATE_KEYS: ${{ secrets.VALIDATOR_PRIVATE_KEYS }}
